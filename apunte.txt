PRACTICAS

	# filosofia movil first y responsive desing
	# html5 boilerplate mejores practicas

	# en "css orientado a objetos", reservar los id para javascript en css utilizar clases para tratar a cada elemento como un objeto

	# cuando la imagen no es parte del contenido cargar las imagenes por css

	# mantener solo un header, un nav y un h1 por pagina

	#utilizar margenes en relacional tamaño de la fuente (em)

HTML----------
HEAD
	dependencia al responsive design
	<meta name="viewport" content="width=device-width, initial-scale=1">

	todo el css igual en todos los navegadores
	(no utilizar reset en css)
	<link rel="stylesheet" href="css/normalize.css"> 

	libreria js para hacer que todo lo de html5 funcione bien en navegadores
	<script src="js/vendor/modernizr-2.6.2.min.js"></script>

BODY
	todo el javascript antes de cerrar la etiqueta

ESTRUCTURA

	header
	nav -> botones de navegacion
	section
	article -> ultimo item dentro de un sistema semantico
	footer
	figure -> imagenes

CSS
	#margin <arriba> <derecha> <abajo> <izq>

	#para los margenes considerar los pixeles de los divs anteriores sobre todo cuando hay un div flotando a la izq. ej. si tengo un div:float left; width 60px; para poner un margen al div contiguo es necesario sumar el width + el margen deseado  

	#border-radius 1em: bordes redondeados
	#border-radius 50%: imagen circular

APUNTE

	#instalar node.js y stylus

	#compilar stylus
	stylus prueba1.styl -c -w

	# por defecto recomendado para la web
	font-size 16px

	# para utilizar un padding qe dependa del tamaño de la fuente por defecto se utiliza como medida "em"

	#retina necesita el doble de pixeles para mostrar una imagen de buena calidad (prop 4:1) si tenemos una imagen de 100x100px hay qe exportarla a 200x200px,.png no tiene problemas de peso al redimencionar la imagen,
	en el caso de los jpg, uno de 100x100 a 90% de calidad pesa mas que uno de 200x200 a 50% y dentro de esos parametros no debiera producir problemas

	# en imagenes utilizar pixeles absolutos, para textos y otras cosas utilizar tamaños adaptables

	# se pueden agregar varias clases a un tag <div class="logo left">



